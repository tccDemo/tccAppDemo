{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "TCC Web Service"
  },
  "host": "4n",
  "basePath": "/restcc",
  "securityDefinitions": {
    "APITokenHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Token"
    }
  },
  "produces": [
    "application/json"
  ],
  "paths": {
    "/tcc_auth/{cx}": {
      "get": {
        "summary": "get token",
        "description": "get users token",
        "tags": [
          "tcc_auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "campusId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "account",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "encryptedPassword",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "installId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token String",
            "schema": {
              "type": "object",
              "properties": {
                "apiToken": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Invalid User"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tcc_auth/{cx}/Pwd": {
      "put": {
        "summary": "change pwd",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "PasswordEditor",
            "description": "edit user's PWD",
            "schema": {
              "type": "object",
              "required": [
                "oldPassword",
                "password",
                "repeatedPassword"
              ],
              "properties": {
                "oldPassword": {
                  "description": "oldPassword",
                  "type": "string"
                },
                "password": {
                  "description": "password",
                  "type": "string"
                },
                "repeatedPassword": {
                  "description": "repeatedPassword",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "403": {
            "description": "Invalid User"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tcc_auth/{cx}/{login}/PwdHint": {
      "get": {
        "summary": "get PWD hint questions",
        "tags": [
          "tcc_auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "login",
            "description": "user login",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PwdHint"
            }
          },
          "403": {
            "description": "Invalid User"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tcc_auth/{cx}/{login}/TempPwd": {
      "get": {
        "summary": "get temporary password",
        "tags": [
          "tcc_auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "login",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "passwordHintAns",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "tempPwd": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Invalid User"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tcc_profile/{cx}/Profile": {
      "get": {
        "summary": "get user's Profile",
        "description": "The Profile endpoint returns information about the user.\n",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "edit user's profile",
        "description": "edit user's profile\n",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "profileEditor",
            "description": "edit user's profile",
            "schema": {
              "type": "object",
              "required": [
                "homeRegion"
              ],
              "properties": {
                "homeRegion": {
                  "description": "Home Region.",
                  "type": "string",
                  "maxLength": 32
                },
                "language": {
                  "description": "Spoken languages.",
                  "type": "string",
                  "maxLength": 256
                },
                "interest": {
                  "description": "Interests/Hobbies.",
                  "type": "string",
                  "maxLength": 256
                },
                "research": {
                  "description": "Research interests.",
                  "type": "string",
                  "maxLength": 256
                }
              }
            }
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_profile/{cx}/Avatar": {
      "get": {
        "summary": "returns user's Avatar image",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "produces": [
          "image/png",
          "image/gif",
          "image/jpeg"
        ],
        "tags": [
          "tcc_profile"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "post": {
        "summary": "Uploads user's Avatar image",
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tcc_profile/{cx}/Education": {
      "get": {
        "summary": "get user's Educations",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "responses": {
          "200": {
            "description": "list of Education",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Education"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "add user's Education",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "educationEditor",
            "schema": {
              "$ref": "#/definitions/Education"
            }
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_profile/{cx}/Education/{id}": {
      "put": {
        "summary": "edit user's Education",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          },
          {
            "in": "body",
            "name": "educationEditor",
            "schema": {
              "$ref": "#/definitions/Education"
            }
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "Education"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "delete user's Education",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_profile/{cx}/WorkExperience": {
      "get": {
        "summary": "get user's WorkExperience",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "responses": {
          "200": {
            "description": "list of WorkExperience",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkExperience"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "add user's WorkExperience",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "workExperienceEditor",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_profile/{cx}/WorkExperience/{id}": {
      "put": {
        "summary": "edit user's WorkExperience",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          },
          {
            "in": "body",
            "name": "workExperienceEditor",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "delete user's WorkExperience",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "tags": [
          "tcc_profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_app/AppInfo": {
      "get": {
        "summary": "get App Version Info",
        "tags": [
          "tcc_app"
        ],
        "parameters": [
          {
            "name": "packageName",
            "description": "PackageName",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "return AppInfo",
            "schema": {
              "$ref": "#/definitions/AppInfo"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_app/{cx}/UserDevice/": {
      "post": {
        "summary": "Post User Device Info",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "userDeviceInfoEditor",
            "schema": {
              "$ref": "#/definitions/UserDeviceInfo"
            }
          }
        ],
        "tags": [
          "tcc_app",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_campus/CampusInfo": {
      "get": {
        "summary": "get CampusInfo",
        "tags": [
          "tcc_campus"
        ],
        "parameters": [
          {
            "name": "campusCode",
            "description": "Campus Code",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "return CampusInfo",
            "schema": {
              "$ref": "#/definitions/CampusInfo"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_user/UserInfo": {
      "get": {
        "summary": "get Current User Info",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_user",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "return UserInfo",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/list/all": {
      "get": {
        "summary": "get all bookmarks",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All bookmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bookmark"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/list/favor/": {
      "get": {
        "summary": "get user favor bookmarks",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "User favor bookmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bookmark"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Re-order user favor bookmarks",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "idList",
            "description": "Ids in Order",
            "schema": {
              "type": "object",
              "required": [
                "idStr"
              ],
              "properties": {
                "idStr": {
                  "description": "Ids",
                  "type": "string",
                  "maxLength": 1024
                }
              }
            }
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/favor/{id}": {
      "post": {
        "summary": "add user favor bookmark",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "delete user favor bookmark",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/{id}": {
      "get": {
        "summary": "get one user favor bookmark",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "return one bookmark",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/list/popular": {
      "get": {
        "summary": "get popular bookmarks",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Popular bookmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bookmark"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_bookmark/{cx}/Bookmark/list/recent": {
      "get": {
        "summary": "get recent bookmarks",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_bookmark",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Recent bookmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bookmark"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_announcement/{cx}/Announcement/list/": {
      "get": {
        "summary": "get announcements",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_announcement",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "list of Announcement",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Announcement"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_announcement/{cx}/Announcement/{id}": {
      "get": {
        "summary": "get one announcement",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_announcement",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "return One Announcement",
            "schema": {
              "$ref": "#/definitions/Announcement"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_announcement/{cx}/Announcement/read/{ids}": {
      "post": {
        "summary": "Mark read",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/ids"
          }
        ],
        "tags": [
          "tcc_announcement",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Mark unread",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/ids"
          }
        ],
        "tags": [
          "tcc_announcement",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_calendar/{cx}/Event/list/": {
      "get": {
        "summary": "get calendar events",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_calendar",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "list of Event",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_calendar/{cx}/Event/{id}": {
      "get": {
        "summary": "get one event",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_calendar",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "return One Event",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tcc_calendar/{cx}/CalendarSubscription": {
      "get": {
        "summary": "get user's CalendarSubscription settings",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_calendar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "responses": {
          "200": {
            "description": "list of CalendarSubscription",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarSubscription"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "edit user's CalendarSubscription",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "calendarSubscriptions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarSubscription"
              }
            }
          }
        ],
        "tags": [
          "tcc_calendar"
        ],
        "responses": {
          "200": {
            "description": "CalendarSubscription"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_notification/{cx}/Notification/list/": {
      "get": {
        "summary": "get user all notifications",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "tags": [
          "tcc_notification",
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "searchValue",
            "description": "Search Value",
            "in": "query",
            "required": false,
            "type": "string",
            "maxLength": 200
          },
          {
            "name": "start",
            "description": "Start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "list of Notification",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "mark all read",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "tags": [
          "tcc_notification",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Clear All one's notifications",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "tags": [
          "tcc_notification",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_notification/{cx}/Notification": {
      "put": {
        "summary": "Mark read one notification",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "objectId",
            "description": "Object Id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Object Type",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "tcc_notification",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete one notification",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "name": "objectId",
            "description": "Object Id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Object Type",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "tcc_notification",
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/tcc_notification/{cx}/NotificationSetting": {
      "get": {
        "summary": "get user's NotificationSetting",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          }
        ],
        "tags": [
          "tcc_notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationSetting"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "summary": "update user's NotificationSetting",
        "security": [
          {
            "APITokenHeader": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cx"
          },
          {
            "in": "body",
            "name": "NotificationSettingEditor",
            "schema": {
              "$ref": "#/definitions/NotificationSetting"
            }
          }
        ],
        "tags": [
          "tcc_notification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "definitions": {
    "PwdHint": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "description": "what kind of question"
        },
        "ans": {
          "type": "string",
          "description": "hint answer"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique identifier representing a specific user."
        },
        "userName": {
          "type": "string",
          "description": "User Name."
        },
        "avatar": {
          "type": "string",
          "description": "Image URL"
        },
        "email": {
          "type": "string"
        },
        "homeRegion": {
          "type": "string",
          "description": "Home Region."
        },
        "language": {
          "type": "string",
          "description": "Spoken languages."
        },
        "interest": {
          "type": "string",
          "description": "Interests/Hobbies."
        },
        "research": {
          "type": "string",
          "description": "Research interests."
        }
      }
    },
    "Education": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id",
          "maxLength": 64
        },
        "institution": {
          "type": "string",
          "description": "Institution",
          "maxLength": 64
        },
        "location": {
          "type": "string",
          "description": "Location",
          "maxLength": 64
        },
        "degree": {
          "type": "string",
          "description": "Degree",
          "maxLength": 64
        },
        "major": {
          "type": "string",
          "description": "Major",
          "maxLength": 64
        },
        "gradMonth": {
          "type": "string",
          "description": "Graduated Month",
          "maxLength": 2
        },
        "gradYear": {
          "type": "string",
          "description": "Graduated Year",
          "maxLength": 4
        }
      }
    },
    "WorkExperience": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id",
          "maxLength": 64
        },
        "company": {
          "type": "string",
          "description": "Company",
          "maxLength": 64
        },
        "location": {
          "type": "string",
          "description": "Location",
          "maxLength": 64
        },
        "industry": {
          "type": "string",
          "description": "Industry",
          "maxLength": 64
        },
        "title": {
          "type": "string",
          "description": "Title",
          "maxLength": 64
        },
        "duty": {
          "type": "string",
          "description": "Duty",
          "maxLength": 1024
        },
        "beginMonth": {
          "type": "string",
          "description": "From Month",
          "maxLength": 2
        },
        "beginYear": {
          "type": "string",
          "description": "From Year",
          "maxLength": 4
        },
        "endMonth": {
          "type": "string",
          "description": "To Month",
          "maxLength": 2
        },
        "endYear": {
          "type": "string",
          "description": "To Year",
          "maxLength": 4
        }
      }
    },
    "AppInfo": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string",
          "description": "App Name"
        },
        "packageName": {
          "type": "string",
          "description": "Package Name"
        },
        "versionCode": {
          "type": "string",
          "description": "Version Code"
        },
        "versionNumber": {
          "type": "string",
          "description": "Version Number"
        },
        "releasedAt": {
          "type": "string",
          "description": "Released Date"
        },
        "isForceUpdate": {
          "type": "boolean",
          "description": "isForceUpdate or not"
        },
        "description": {
          "type": "string",
          "description": "Description"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "Login Id"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "userId": {
          "type": "string",
          "description": "identifier representing a specific user"
        },
        "email": {
          "type": "string",
          "description": "Email"
        },
        "profileIcon": {
          "type": "string",
          "description": "Profile Icon"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone"
        }
      }
    },
    "CampusInfo": {
      "type": "object",
      "properties": {
        "campusId": {
          "type": "string",
          "description": "Unique identifier representing a specific campus"
        },
        "host": {
          "type": "string",
          "description": "Host Url"
        },
        "logo": {
          "type": "string",
          "description": "Login Page Logo"
        },
        "campusName": {
          "type": "string",
          "description": "Login Page Campus Name"
        },
        "theme": {
          "type": "string",
          "description": "Theme name"
        },
        "loginBGColor": {
          "type": "string",
          "description": "Login Page Background color"
        },
        "loginBGImage": {
          "type": "string",
          "description": "Login Page Background image"
        }
      }
    },
    "Bookmark": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a specific bookmark"
        },
        "subject": {
          "type": "string",
          "description": "Subject"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "link": {
          "type": "string",
          "description": "Link"
        },
        "imgIcon": {
          "type": "string",
          "description": "Image Icon"
        },
        "iconType": {
          "type": "string",
          "description": "Icon Type"
        },
        "iconCode": {
          "type": "string",
          "description": "Icon Code"
        },
        "iconBg": {
          "type": "string",
          "description": "Icon background"
        },
        "iconFg": {
          "type": "string",
          "description": "Icon Frontground"
        },
        "isMyFavour": {
          "type": "boolean",
          "description": "IsMyFavour or not"
        },
        "seq": {
          "type": "integer",
          "description": "Sequence"
        }
      }
    },
    "Announcement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a specific announcement"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "detail": {
          "type": "string",
          "description": "Detail"
        },
        "priority": {
          "type": "string",
          "description": "Priority"
        },
        "shortDetail": {
          "type": "string",
          "description": "Short Detail for the list page, remove HTML tags and Images"
        },
        "sticky": {
          "type": "string",
          "description": "Sticky or not"
        },
        "isNew": {
          "type": "boolean",
          "description": "isNew or not"
        },
        "postedBy": {
          "type": "string",
          "description": "Posted By"
        },
        "postedAt": {
          "type": "string",
          "format": "date",
          "description": "Posted At"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a specific event"
        },
        "calendar": {
          "type": "string",
          "description": "Calendar Name"
        },
        "calendarColor": {
          "type": "string",
          "description": "Calendar Color"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "postedBy": {
          "type": "string",
          "description": "Posted By"
        },
        "detail": {
          "type": "string",
          "description": "Detail"
        },
        "location": {
          "type": "string",
          "description": "Location"
        },
        "startDate": {
          "type": "string",
          "description": "Start Date"
        },
        "endDate": {
          "type": "string",
          "description": "End Date"
        },
        "allDay": {
          "type": "boolean",
          "description": "is AllDay Event or not"
        },
        "repeatInfo": {
          "type": "string",
          "description": "Repeat Info"
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object Id"
        },
        "type": {
          "type": "string",
          "description": "Type"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "detail": {
          "type": "string",
          "description": "Detail"
        },
        "from": {
          "type": "string",
          "description": "from"
        },
        "iconName": {
          "type": "string",
          "description": "Icon Name"
        },
        "params": {
          "type": "string",
          "description": "params"
        },
        "hasRead": {
          "type": "boolean",
          "description": "hasRead"
        },
        "publishedAt": {
          "type": "string",
          "description": "Published At"
        }
      }
    },
    "CalendarSubscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id",
          "maxLength": 64
        },
        "name": {
          "type": "string",
          "description": "name",
          "maxLength": 384
        },
        "isSub": {
          "type": "boolean",
          "description": "is subscribed",
          "default": true
        }
      }
    },
    "NotificationSetting": {
      "type": "object",
      "properties": {
        "pushAnnouncements": {
          "type": "boolean",
          "description": "Announcements notification"
        },
        "pushBookmarks": {
          "type": "boolean",
          "description": "Bookmarks notification"
        },
        "pushCalEvents": {
          "type": "boolean",
          "description": "Calendars notification"
        },
        "enableQuietHours": {
          "type": "boolean",
          "description": "Quiet Hours"
        }
      }
    },
    "UserDeviceInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Device UUID"
        },
        "fcmToken": {
          "type": "string",
          "description": "FCM Token"
        },
        "platform": {
          "type": "string",
          "description": "OS Name"
        },
        "version": {
          "type": "string",
          "description": "OS Version"
        },
        "manufacturer": {
          "type": "string",
          "description": "Manufacturer"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "cx": {
      "name": "cx",
      "in": "path",
      "description": "cx",
      "required": true,
      "type": "string"
    },
    "id": {
      "name": "id",
      "in": "path",
      "description": "id",
      "required": true,
      "type": "string"
    },
    "ids": {
      "name": "ids",
      "in": "path",
      "description": "ids",
      "required": true,
      "type": "string"
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}